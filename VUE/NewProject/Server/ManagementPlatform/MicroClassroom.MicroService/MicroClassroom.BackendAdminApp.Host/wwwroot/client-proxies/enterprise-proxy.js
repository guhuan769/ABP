/* This file is automatically generated by ABP framework to use MVC Controllers from javascript. */


// module enterprise

(function(){

  // controller microClassroom.enterprise.banner

  (function(){

    abp.utils.createNamespace(window, 'microClassroom.enterprise.banner');

    microClassroom.enterprise.banner.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/enterprise/banner/create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    microClassroom.enterprise.banner.update = function(id, input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/enterprise/banner/update/' + id + '',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    microClassroom.enterprise.banner.get = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/enterprise/banner/' + id + '',
        type: 'GET'
      }, ajaxParams));
    };

    microClassroom.enterprise.banner.getPagedList = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/enterprise/banner/page-list' + abp.utils.buildQueryString([{ name: 'filter', value: input.filter }, { name: 'sorting', value: input.sorting }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

    microClassroom.enterprise.banner.remove = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/enterprise/banner/remove' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'DELETE',
        dataType: null
      }, ajaxParams));
    };

  })();

  // controller microClassroom.enterprise.course

  (function(){

    abp.utils.createNamespace(window, 'microClassroom.enterprise.course');

    microClassroom.enterprise.course.createCategory = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/enterprise/course/create-category',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    microClassroom.enterprise.course.createCourse = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/enterprise/course/create-course',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    microClassroom.enterprise.course.updateCourse = function(id, input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/enterprise/course/update-course/' + id + '',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    microClassroom.enterprise.course.createCourseTeacher = function(id, teacherId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/enterprise/course/' + id + '/course-teacher/' + teacherId + '',
        type: 'POST',
        dataType: null
      }, ajaxParams));
    };

    microClassroom.enterprise.course.get = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/enterprise/course/' + id + '',
        type: 'GET'
      }, ajaxParams));
    };

    microClassroom.enterprise.course.getCategory = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/enterprise/course/category',
        type: 'GET'
      }, ajaxParams));
    };

    microClassroom.enterprise.course.getListAsyncByMechMechanismId = function(mechMechanismId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/enterprise/course/list/' + mechMechanismId + '',
        type: 'GET'
      }, ajaxParams));
    };

    microClassroom.enterprise.course.getList = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/enterprise/course/list',
        type: 'GET'
      }, ajaxParams));
    };

    microClassroom.enterprise.course.getPagedList = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/enterprise/course/page-list' + abp.utils.buildQueryString([{ name: 'filter', value: input.filter }, { name: 'sorting', value: input.sorting }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

    microClassroom.enterprise.course.updateCourseItem = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/enterprise/course/course-item',
        type: 'PUT',
        dataType: null,
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    microClassroom.enterprise.course.remove = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/enterprise/course/remove' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'DELETE'
      }, ajaxParams));
    };

  })();

  // controller microClassroom.enterprise.mechanism

  (function(){

    abp.utils.createNamespace(window, 'microClassroom.enterprise.mechanism');

    microClassroom.enterprise.mechanism.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/enterprise/mechanism/create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    microClassroom.enterprise.mechanism.remove = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/enterprise/mechanism/remove' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'DELETE'
      }, ajaxParams));
    };

    microClassroom.enterprise.mechanism.update = function(id, input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/enterprise/mechanism/update/' + id + '',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    microClassroom.enterprise.mechanism.get = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/enterprise/mechanism/' + id + '',
        type: 'GET'
      }, ajaxParams));
    };

    microClassroom.enterprise.mechanism.getPagedList = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/enterprise/mechanism/paged-list' + abp.utils.buildQueryString([{ name: 'filter', value: input.filter }, { name: 'sorting', value: input.sorting }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

  })();

  // controller microClassroom.enterprise.teacher

  (function(){

    abp.utils.createNamespace(window, 'microClassroom.enterprise.teacher');

    microClassroom.enterprise.teacher.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/enterprise/teacher/create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    microClassroom.enterprise.teacher.update = function(id, input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/enterprise/teacher/update/' + id + '',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    microClassroom.enterprise.teacher.get = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/enterprise/teacher/' + id + '',
        type: 'GET'
      }, ajaxParams));
    };

    microClassroom.enterprise.teacher.getPagedList = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/enterprise/teacher/page-list' + abp.utils.buildQueryString([{ name: 'filter', value: input.filter }, { name: 'sorting', value: input.sorting }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

    microClassroom.enterprise.teacher.remove = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/enterprise/teacher/remove' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'DELETE'
      }, ajaxParams));
    };

  })();

})();


